{"version":3,"file":"static/js/740.90b1699c.chunk.js","mappings":"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","sources":["components/Api/api.js","webpack://goit-react-hw-05-movies/./src/components/Error/Error.module.css?141d","components/Error/Error.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieMarkup/MovieMarkup.module.css?6db0","components/MovieMarkup/MovieMarkup.jsx","webpack://goit-react-hw-05-movies/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.headers.common['Authorization'] = 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZTBiYzc4N2E3Y2UyY2JkYjQwYjFlYmMzNGZjYTJmMCIsInN1YiI6IjY1NTNiZGFiNjdiNjEzNDVkYmMwMmRiNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.RHpHyLQruz3jLYmrNps4_zMlAKkULQZ-WSRGOBUyogg';\naxios.defaults.headers.common['Accept'] = 'application/json';\n\nconst fetchData = async (path) => {\n  try {\n    const response = await axios.get(path);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport default fetchData;\n","// extracted by mini-css-extract-plugin\nexport default {\"errorBage\":\"Error_errorBage__4lvnL\"};","import css from './Error.module.css'\n\nexport const Error = ({ error }) => (\n  <p className={css.errorBage}>\n    Oops, some error occured... Error message: {error}\n  </p>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"gallery\":\"MovieMarkup_gallery__ji9JG\",\"galleryItem\":\"MovieMarkup_galleryItem__jynx+\",\"galleryImage\":\"MovieMarkup_galleryImage__TzaAO\",\"galleryTitle\":\"MovieMarkup_galleryTitle__8rWD6\"};","import { Link, useLocation } from \"react-router-dom\"\nimport css from './MovieMarkup.module.css'\n\nexport const MovieMarkup = ({ movieDetails }) => {\n  const location = useLocation();\n  const defaultImg = \"https://kartinkof.club/uploads/posts/2022-04/1649989581_17-kartinkof-club-p-koshechki-kartinki-prikolnie-17.jpg\";\n\n  return (\n    <ul className={css.gallery}>\n      {movieDetails !== null && movieDetails.results.map(({ title, id, name, poster_path }) => (\n        <li key={id} className={css.galleryItem}>\n          <Link state={{from: location}} to={`/movies/${id}`}>\n            <img className={css.galleryImage} src={poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : defaultImg} alt={title ? title : name} width=\"150\" />\n            <h2 className={css.galleryTitle}>{title ? title : name}</h2>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Form_searchbar__4gZc3\",\"searchbarInput\":\"Form_searchbarInput__0PzqC\",\"searchbarBtn\":\"Form_searchbarBtn__CyDJr\"};","import { Formik, Form, Field } from \"formik\";\nimport css from './Form.module.css'\n\nexport const MoviesSearchForm = ({ handleFormSubmit }) => {\n  return (\n    <Formik\n      initialValues={{ query: \"\" }}\n      onSubmit={handleFormSubmit}\n    >\n      <Form className={css.searchbar}>\n        <Field className={css.searchbarInput} type=\"text\" name=\"query\" placeholder=\"Search movies\" autoComplete=\"off\" autoFocus />\n        <button className={css.searchbarBtn} type=\"submit\">Search</button>\n      </Form>\n    </Formik>\n  );\n};\n\n","import React, { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport fetchData from \"components/Api/api\";\nimport { Error } from \"components/Error/Error\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { MovieMarkup } from \"components/MovieMarkup/MovieMarkup\";\nimport { MoviesSearchForm } from \"components/Form/Form\";\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    const path = `search/movie?query=${query}&include_adult=false&language=en-US&page=1`;\n\n    const fetchSearchedMovies = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchData(path);\n        setMovieDetails(data);\n        const dataFilms = JSON.stringify(data.results);\n        localStorage.setItem(\"films\", dataFilms);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (query) {\n      fetchSearchedMovies();\n    }\n  }, [query]);\n\n  const handleFormSubmit = (values) => {\n    setSearchParams({ query: values.query });\n  };\n\n  return (\n    <>\n      <MoviesSearchForm handleFormSubmit={handleFormSubmit} />\n      {error && <Error error={error} />}\n      {isLoading && <Loader />}\n      <MovieMarkup movieDetails={movieDetails} />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","path","response","_context","prev","next","sent","abrupt","data","t0","stop","_x","apply","arguments","Error","error","_jsxs","className","css","children","MovieMarkup","movieDetails","location","useLocation","_jsx","results","map","_ref2","title","id","name","poster_path","Link","state","from","to","concat","src","alt","width","MoviesSearchForm","handleFormSubmit","Formik","initialValues","query","onSubmit","Form","Field","type","placeholder","autoComplete","autoFocus","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","setMovieDetails","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setError","get","useEffect","fetchSearchedMovies","dataFilms","JSON","stringify","localStorage","setItem","message","finish","_Fragment","values","Loader"],"sourceRoot":""}